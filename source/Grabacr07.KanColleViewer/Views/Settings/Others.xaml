<UserControl x:Class="Grabacr07.KanColleViewer.Views.Settings.Others"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
			 xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
			 xmlns:metro2="clr-namespace:Grabacr07.Desktop.Metro.Controls;assembly=Desktop.Metro"
			 xmlns:properties="clr-namespace:Grabacr07.KanColleViewer.Properties"
			 xmlns:viewModels="clr-namespace:Grabacr07.KanColleViewer.ViewModels"
			 xmlns:models="clr-namespace:Grabacr07.KanColleViewer.Models"
			 xmlns:self="clr-namespace:Grabacr07.KanColleViewer.Views.Settings"
			 mc:Ignorable="d"
			 d:DesignWidth="500"
			 d:DesignHeight="300"
			 d:DataContext="{d:DesignInstance viewModels:SettingsViewModel}">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Common.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>

	<i:Interaction.Triggers>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="OpenFolderDialog/Screenshot">
			<livet:FolderBrowserDialogInteractionMessageAction />
		</livet:InteractionMessageTrigger>
	</i:Interaction.Triggers>

	<StackPanel>
		<TextBlock Text="{Binding Resources.Settings_Screenshot, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
				   Style="{DynamicResource SettingsHeaderTextStyleKey}" />
		<Grid Margin="20,0,0,10">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock Margin="0,6">
				<Run Text="{Binding Resources.Settings_Screenshot_FolderTextBox_Label, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
				<Run Text=":  " />
			</TextBlock>
			<metro:PromptTextBox Grid.Row="0"
								 Grid.Column="1"
								 Text="{Binding ScreenshotFolder, UpdateSourceTrigger=PropertyChanged}"
								 Prompt="{Binding Resources.Settings_Screenshot_FolderTextBox_Prompt, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
			<metro2:CallMethodButton Grid.Row="0"
									 Grid.Column="2"
									 Content="{Binding Resources.Settings_Screenshot_FolderSelectionDialog_OpenButton, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
									 MethodName="OpenScreenshotFolderSelectionDialog"
									 Margin="6,0" />
			<metro2:CallMethodButton Grid.Row="0"
									 Grid.Column="3"
									 Content="{Binding Resources.Settings_Screenshot_OpenFolderButton, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
									 IsEnabled="{Binding CanOpenScreenshotFolder}"
									 MethodName="OpenScreenshotFolder"
									 Margin="0" />

			<TextBlock Grid.Row="1"
					   Grid.Column="0"
					   Margin="0,6">
				<Run Text="{Binding Resources.Settings_Screenshot_ImageFormat_Label, Source={x:Static models:ResourceService.Current}, Mode=OneWay}" />
				<Run Text=":  " />
			</TextBlock>
			<StackPanel Grid.Row="1"
						Grid.Column="1"
						Grid.ColumnSpan="3"
						Orientation="Horizontal">
				<RadioButton Content="PNG"
							 IsChecked="{Binding ScreenshotImageFormat, Mode=TwoWay, ConverterParameter=Png, Converter={StaticResource EnumToBooleanConverter}}" />
				<RadioButton Content="JPG"
							 Margin="16,0,0,0"
							 IsChecked="{Binding ScreenshotImageFormat, Mode=TwoWay, ConverterParameter=Jpeg, Converter={StaticResource EnumToBooleanConverter}}" />
			</StackPanel>
		</Grid>

        <Rectangle Height="1"
				   Style="{DynamicResource SeparatorRectangleStyleKey}" />

        <TextBlock Text="{Binding Resources.Settings_Language, Source={x:Static models:ResourceService.Current}, Mode=OneWay}"
				   Style="{DynamicResource SettingsHeaderTextStyleKey}"
				   Margin="0,10" />

		<metro:PromptComboBox Margin="20,0,0,10"
							  HorizontalAlignment="Left"
							  Prompt=""
							  ItemsSource="{Binding Cultures, Mode=OneTime}"
							  DisplayMemberPath="DisplayName"
							  SelectedValuePath="Name"
							  SelectedValue="{Binding Culture, Mode=TwoWay}"
							  IsReadOnly="True"
							  MinWidth="250" />

        <Rectangle Height="1"
				   Style="{DynamicResource SeparatorRectangleStyleKey}" />

        <TextBlock Text="Flash渲染设置"
				   Style="{DynamicResource SettingsHeaderTextStyleKey}"
				   Margin="0,10" />

        <StackPanel Margin="20,0,0,0">
            <TextBlock Text="渲染质量" />
            <ItemsControl ItemsSource="{Binding FlashQualitySettings, Mode=OneTime}" Margin="0,5">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Margin="5,5" GroupName="FlashQuality" Command="{Binding DataContext.SetFlashQuality, RelativeSource={RelativeSource AncestorType={x:Type self:Others}}}" CommandParameter="{Binding}">
                            <TextBlock Style="{DynamicResource DefaultTextStyleKey}" LineHeight="18" Text="{Binding}"/>
                            <RadioButton.ToolTip>
                                <ToolTip>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionsConverter}}"/>
                                </ToolTip>
                            </RadioButton.ToolTip>
                            <RadioButton.Style>
                                <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                    <Setter Property="IsChecked" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource MultiBindingEqualityConverter}">
                                                    <Binding Mode="OneTime"/>
                                                    <Binding Mode="OneWay" Path="DataContext.FlashQuality" RelativeSource="{RelativeSource AncestorType={x:Type self:Others}}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <StackPanel Margin="20,0,0,0">
            <TextBlock Text="渲染模式" />
            <ItemsControl ItemsSource="{Binding FlashRenderModes, Mode=OneTime}" Margin="0,5">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Margin="5,5" GroupName="FlashRenderMode" Command="{Binding DataContext.SetFlashRenderMode, RelativeSource={RelativeSource AncestorType={x:Type self:Others}}}" CommandParameter="{Binding}">
                            <TextBlock Style="{DynamicResource DefaultTextStyleKey}" LineHeight="18" Text="{Binding}"/>
                            <RadioButton.ToolTip>
                                <ToolTip>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionsConverter}}"/>
                                </ToolTip>
                            </RadioButton.ToolTip>
                            <RadioButton.Style>
                                <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                    <Setter Property="IsChecked" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource MultiBindingEqualityConverter}">
                                                    <Binding Mode="OneTime"/>
                                                    <Binding Mode="OneWay" Path="DataContext.FlashRenderMode" RelativeSource="{RelativeSource AncestorType={x:Type self:Others}}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <Rectangle Height="1"
				   Style="{DynamicResource SeparatorRectangleStyleKey}" />

	</StackPanel>
</UserControl>